version: '3.8'

services:
  # Frontend (React + Vite)
  frontend:
    build: .
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080
    depends_on:
      - backend
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    command: npm run dev
    networks:
      - ai-editor-network

  # Backend (Node.js + Express)
  backend:
    build: ./backend
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - OLLAMA_HOST=192.168.4.88:11434
      - WORKSPACE_DIR=/workspace
      - CORS_ORIGINS=http://localhost:3000
    volumes:
      - ./backend:/app
      - ai-editor-workspace:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ai-editor-network
    restart: unless-stopped

  # Optional: Database for future expansion
  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ai_editor
      - POSTGRES_USER=ai_editor
      - POSTGRES_PASSWORD=ai_editor_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai-editor-network
    restart: unless-stopped

  # Optional: Redis for caching and session management
  redis:
    image: redis:7-alpine
    networks:
      - ai-editor-network
    restart: unless-stopped

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - ai-editor-network
    restart: unless-stopped

  # File watcher service (for development)
  file-watcher:
    build: ./backend
    environment:
      - NODE_ENV=development
      - WORKSPACE_DIR=/workspace
    volumes:
      - ai-editor-workspace:/workspace
    command: node -e "
      const chokidar = require('chokidar');
      const WebSocket = require('ws');
      
      const watcher = chokidar.watch('/workspace', {
        ignored: /node_modules|\.git/,
        persistent: true
      });
      
      const ws = new WebSocket('ws://backend:8080');
      
      watcher.on('change', (path) => {
        ws.send(JSON.stringify({
          type: 'file_changed',
          path: path.replace('/workspace/', ''),
          action: 'modified'
        }));
      });
      
      console.log('File watcher started');
    "
    depends_on:
      - backend
    networks:
      - ai-editor-network
    restart: unless-stopped

volumes:
  ai-editor-workspace:
  postgres_data:

networks:
  ai-editor-network:
    driver: bridge 